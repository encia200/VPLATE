apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 25
    buildToolsVersion "27.0.1"
    defaultConfig {
        applicationId "com.vplate"
        minSdkVersion 24
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {

        debug {
            ext.enableCrashlytics = false
            //ext.alwaysUpdateBuildId = false
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    flavorDimensions "stage"
    productFlavors {

        dev {
            dimension "stage"
            versionCode 100
            minSdkVersion 21

            aaptOptions.cruncherEnabled = false
            resConfigs "ko", "xxxhdpi"
        }

        prd {
            dimension "stage"
            versionCode new Date().format('yyMMddHHmm').toInteger()
        }


        /*free {
            dimension "mode"
            applicationIdSuffix ".free"
        }*/
        /*paid {
            dimension "mode"
            applicationIdSuffix ".paid"
        }*/
    }
    splits {
        abi {
            enable true
            reset()
            include 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
            universalApk false
        }
    }

    android.variantFilter { variant ->
        def buildName = variant.buildType.name;
        def flavorName = variant.getFlavors().get(0).name;

        if (flavorName == 'dev' && buildName == 'release'
                || flavorName == 'prd' && buildName == 'debug') {
            variant.setIgnore(true);
        }

        splits.abi.enable = (flavorName == 'prd');
    }
    sourceSets {
        main {
            res.srcDirs =
                    [
                            'src/main/res/layout/community',
                            'src/main/res/layout',
                            'src/main/res'
                    ]
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    compile project(':video-player-manager')
    compile project(':list-visibility-utils')

    testCompile 'junit:junit:4.12'
    compile 'com.android.support:recyclerview-v7:25.3.1'
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.android.support:cardview-v7:25.3.1'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'de.hdodenhof:circleimageview:2.2.0'
    compile 'com.android.support:support-compat:25.3.1'
    compile 'com.daimajia.easing:library:2.0@aar'
    compile 'com.daimajia.androidanimations:library:2.3@aar'
    compile 'com.google.firebase:firebase-messaging:10.0.1'

    compile 'com.squareup.retrofit2:retrofit:2.0.2'
    compile 'com.squareup.retrofit2:converter-gson:2.0.2'

    compile 'com.google.code.gson:gson:2.8.2'
    compile 'com.squareup.okhttp3:okhttp:3.9.1'

    compile 'com.github.bumptech.glide:glide:4.3.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.3.1'

    testCompile 'junit:junit:4.12'
}
repositories {
    mavenCentral()
    maven { url 'https://maven.google.com' }
}
apply plugin: 'com.google.gms.google-services'